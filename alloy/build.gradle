buildscript {
    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.10"
    }
    repositories {
        mavenLocal()

        mavenCentral()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.0.0.RC2'
    id 'com.moowork.node' version '1.1.1'
}

def rootProjectDir = project.projectDir

subprojects {
    group 'alloy'
    version '1.0-SNAPSHOT'

    apply plugin: 'project-report'
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.moowork.node'

    sourceCompatibility = 1.8

    repositories {
        mavenLocal()

        mavenCentral()

        maven {
            url "http://maven.restlet.org"
        }

        maven {
            url "https://repo.spring.io/libs-milestone"
        }
    }

    dependencyManagement {
        imports {
            mavenBom 'alloy:alloy-bom:1.0-SNAPSHOT'
        }

        // TODO these dependencies are in the bom but for some reason I have to also declare them here
        dependencies {
            dependency group: 'io.github.microutils', name: 'kotlin-logging', version: '1.4.9'
            dependency group: 'org.elasticsearch', name: 'elasticsearch', version: '6.1.1'
            dependency group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '6.1.1'
            dependency group: 'junit', name: 'junit', version: '4.12'
        }
    }

    // TODO move these to appropriate module
    dependencies {
//        compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
//        compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
//        compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
//        compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
//
//        compile group: 'org.springframework.security', name: 'spring-security-jwt'
//        compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2'
//
//        compile group: 'org.apache.logging.log4j', name: 'log4j-api'
//        compile group: 'org.apache.logging.log4j', name: 'log4j-core'
//        compile group: 'org.apache.logging.log4j', name: 'log4j-jcl'
//        compile group: 'org.apache.logging.log4j', name: 'log4j-jul'
//        compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl'
//        compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api'
//
//        compile group: 'com.google.guava', name: 'guava', version: '23.6-jre'

        // TODO include these but determine the correct version (and move to the bom)
//        compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.8.6'
//        compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.8.6'

//        compile group: 'org.elasticsearch', name: 'elasticsearch', version: '6.1.1'
//        compile group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '6.1.1'
//
//        testCompile group: 'junit', name: 'junit'
    }

    configurations.all {
        exclude group: "log4j", module: "log4j"
        exclude group: "org.slf4j", module: "slf4j-log4j12"
        exclude group: "org.slf4j", module: "jcl-over-slf4j"
        exclude group: "org.slf4j", module: "jul-to-slf4j"
        exclude group: "org.slf4j", module: "log4j-over-slf4j"
        exclude group: "junit", module: "junit-dep"
        exclude group: "ch.qos.logback"
    }

    task buildTests(type: Jar, dependsOn: 'test') {
        from sourceSets.test.output
        baseName "${baseName}-test"
    }

    configurations {
        tests {
            extendsFrom testRuntime
        }
    }

    artifacts {
        tests buildTests
    }

    tasks.build.dependsOn buildTests

    test {
        exclude '**/test/integration/**'
        exclude '**/test/functional/**'
        exclude '**/test/harness/**'
    }

    task integrationTest(type: Test, dependsOn: 'testClasses') {
        testClassesDir = sourceSets.test.output.classesDir
        classpath = sourceSets.test.runtimeClasspath
        jvmArgs = ["-javaagent:${rootProjectDir}/dev/spring-instrument-4.3.4.RELEASE.jar", "-Xmx3g"]

        exclude "**/test/unit/**"
        exclude "**/test/functional/**"
        exclude "**/test/harness/**"
    }
}